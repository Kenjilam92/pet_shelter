{"version":3,"sources":["Components/Table.jsx","Components/Details.jsx","Components/Form.jsx","Components/FormEdit.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Table","props","className","to","list","map","pet","i","key","name","type","_id","Details","useState","setPet","skills","fetchPet","axios","get","id","then","res","data","errors","console","log","catch","err","useEffect","onClick","e","delete","error","navigate","refresh","desc","skill_1","skill_2","skill_3","temp","likes","put","like","Form","setName","setType","setDesc","skill1","setSkill1","skill2","setSkill2","skill3","setSkill3","valid","setValid","onSubmit","preventDefault","newPet","post","addPet","htmlFor","onChange","target","value","placeholder","message","FormEdit","newInfo","updatePet","App","setList","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0d571d59.chunk.js","sourcesContent":["import React from \"react\"\nimport {Link} from \"@reach/router\"\n\nconst Table = props => {\n  return(\n    <div className=\"container\">\n      <h2>These pets are looking for a good home</h2>\n      <Link to=\"/pets/new\">add a pet to the shelter</Link>\n      <table className=\"table table-bordered\">\n        <thead className=\"thead-dark\">\n          <tr>\n            <th>Name</th>\n            <th>Type</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n            {props.list.map( (pet,i) => \n              <tr key={i}>\n                <td>{pet.name}</td>\n                <td>{pet.type}</td>\n                <td>\n                  <Link to={`/pets/${pet._id}`}>details</Link>\n                   | \n                  <Link to={`/pets/${pet._id}/edit`}>edit</Link>\n                </td>\n              </tr>\n            )}\n        </tbody>\n      </table>\n    </div>\n\n  );\n}\n\nexport default Table","import React,{useEffect,useState} from \"react\"\nimport {Link,navigate} from \"@reach/router\"\nimport axios from \"axios\"\nconst Details = props => {\n  const [pet,setPet]=useState({})\n  const [skills,setSkills]=useState({})\n  const fetchPet = () =>{\n    axios.get(`http://localhost:8000/api/pets/${props.id}`)\n      .then (res=>{\n        res.data.errors?\n        console.log(res.data.errors)\n        :\n        setPet(res.data)\n      })\n      .catch (err=>console.log(err))\n  }\n  \n  useEffect(()=>{\n    fetchPet();\n  },[])\n  \n  const like = () => {\n    const temp = pet.likes + 1\n    axios.put(`http://localhost:8000/api/pets/update/${props.id}/like`,{\"likes\":temp})\n      .then(res=>fetchPet())\n      .catch(err=>console.log(err))\n  }\n\n\n  const adopt = id => {\n    axios.delete(`http://localhost:8000/api/pets/delete/${id}`)\n      .then(res=>{\n        res.data.error?\n        console.log(res.data.err)\n        :\n        navigate(\"/\")\n      })\n      .catch(err=>console.log(err))\n    props.refresh()\n  }\n  return(\n    <>\n    <h2>Details about: {pet.name}</h2>\n    <Link to=\"/\">Back to home </Link>\n    <button className=\"btn btn-danger\" onClick={e => adopt(pet._id)}> Adopt {pet.name} </button>\n    <div className=\"border\">\n      <div className=\"row\">\n        <div className=\"col\"><b>Pet type:</b></div>\n        <div className=\"col\"><p>{pet.type}</p></div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\"><b>Description:</b></div>\n        <div className=\"col\"><p>{pet.desc}</p></div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\"><b>Skills:</b></div>\n        <div className=\"col\">\n          <p>{skills.skill_1}</p>\n          <p>{skills.skill_2}</p>\n          <p>{skills.skill_3}</p>\n      </div>\n      </div>\n    <button className=\"btn btn-success\" onClick={e=>like()}> Like </button>\n    <p>{pet.name} has {pet.likes} {pet.likes>1? \"likes\" : \"like\"}</p> \n    </div>\n    </>\n  )\n}\n\nexport default Details","import React,{useState} from \"react\"\nimport axios from \"axios\"\nimport { navigate } from \"@reach/router\"\n\nconst Form = props => {\n  const [name,setName]=useState(\"\")\n  const [type,setType]=useState(\"\")\n  const [desc,setDesc]=useState(\"\")\n  const [skill1,setSkill1]=useState(\"\")\n  const [skill2,setSkill2]= useState(\"\")\n  const [skill3,setSkill3]=useState(\"\")\n  const [valid,setValid]=useState({})\n\n  const addPet = e=>{\n    e.preventDefault()\n    const newPet = {\n      name: name,\n      type: type,\n      desc: desc,\n      skills: { skill_1 : skill1,\n                skill_2 : skill2,\n                skill_3 : skill3\n              }\n    }\n    axios.post(\"http://localhost:8000/api/pets/new\", newPet)\n      .then (res => {\n        res.data.errors?\n        setValid(res.data.errors)\n        :\n        navigate(\"/\")\n        props.refresh()\n      })\n  }\n\n  return(\n    <form className=\"row\" onSubmit={e=>addPet(e)}>\n      <div className=\"col d-flex flex-column\">\n        <label htmlFor=\"name\">Name:</label>\n        <input  type=\"text\" \n                onChange={e=>setName(e.target.value)} \n                value={name}\n                placeholder={valid.name?valid.name.message:null}\n                />\n        \n        <label htmlFor=\"type\">Type:</label>\n        <input  type=\"text\" \n                onChange={e=>setType(e.target.value)} \n                value={type}\n                placeholder={valid.type?valid.type.message:null}\n                />\n\n        <label htmlFor=\"desc\">Description:</label>\n        <input  type=\"text\" \n                onChange={e=>setDesc(e.target.value)} \n                value={desc}\n                placeholder={valid.desc? valid.desc.message:null}\n                />\n\n        <button className=\"btn btn-primary\" \n                type=\"submit\"> \n                Add pet \n        </button>\n      </div>\n\n      <div className=\"col d-flex flex-column\">\n        <p>Skills (optional):</p>\n        <label htmlFor=\"skill1\">Skill 1:</label>\n        <input  type=\"text\" \n                onChange={e=>setSkill1(e.target.value)} \n                value={skill1}\n                // placeholder={valid}\n                />\n\n        <label htmlFor=\"skill2\">Skill 2:</label>  \n        <input  type=\"text\" \n                onChange={e=>setSkill2(e.target.value)} \n                value={skill2}\n                // placeholder={valid}\n                />\n\n        <label htmlFor=\"skill3\">Skill 3:</label>  \n        <input  type=\"text\" \n                onChange={e=>setSkill3(e.target.value)} \n                value={skill3}\n                // placeholder={valid}\n                />\n      </div>\n    </form>\n  )\n}\n\nexport default Form","import React,{useState,useEffect} from \"react\"\nimport axios from \"axios\"\nimport { navigate } from \"@reach/router\"\n\nconst FormEdit = props => {\n  const [name,setName]=useState(\"\")\n  const [type,setType]=useState(\"\")\n  const [desc,setDesc]=useState(\"\")\n  const [skill1,setSkill1]=useState(\"\")\n  const [skill2,setSkill2]= useState(\"\")\n  const [skill3,setSkill3]=useState(\"\")\n  const [valid,setValid]=useState({})\n  useEffect(()=>{\n    axios.get(`http://localhost:8000/api/pets/${props.id}`)\n    .then(res=>{\n      if (res.data.errors){\n        console.log(res.data.errors)\n      } \n      else{\n        setName(res.data.name)\n        setType(res.data.type)\n        setDesc(res.data.desc)\n        setSkill1(res.data.skills.skill_1)\n        setSkill2(res.data.skills.skill_2)\n        setSkill3(res.data.skills.skill_3)\n      }\n    })\n    .catch(err=>console.log(err))\n  },[props.id])\n\n\n  const updatePet = e=>{\n    e.preventDefault()\n    const newInfo = {\n      name: name,\n      type: type,\n      desc: desc,\n      skills: { skill_1 : skill1,\n                skill_2 : skill2,\n                skill_3 : skill3\n              }\n    }\n    axios.put(`http://localhost:8000/api/pets/update/${props.id}`, newInfo)\n      .then (res => {\n        res.data.errors?\n        setValid(res.data.errors)\n        :\n        navigate(\"/\")\n        props.refresh()\n      })\n  }\n\n  return(\n    <form className=\"row\" onSubmit={e=>updatePet(e)}>\n      <div className=\"col d-flex flex-column\">\n        <label htmlFor=\"name\">Name:</label>\n        <input  type=\"text\" \n                onChange={e=>setName(e.target.value)} \n                value={name}\n                placeholder={valid.name?valid.name.message:null}\n                />\n        \n        <label htmlFor=\"type\">Type:</label>\n        <input  type=\"text\" \n                onChange={e=>setType(e.target.value)} \n                value={type}\n                placeholder={valid.type?valid.type.message:null}\n                />\n\n        <label htmlFor=\"desc\">Description:</label>\n        <input  type=\"text\" \n                onChange={e=>setDesc(e.target.value)} \n                value={desc}\n                placeholder={valid.desc? valid.desc.message:null}\n                />\n\n        <button className=\"btn btn-success\" \n                type=\"submit\"> \n                Update \n        </button>\n      </div>\n\n      <div className=\"col d-flex flex-column\">\n        <p>Skills (optional):</p>\n        <label htmlFor=\"skill1\">Skill 1:</label>\n        <input  type=\"text\" \n                onChange={e=>setSkill1(e.target.value)} \n                value={skill1}\n                // placeholder={valid}\n                />\n\n        <label htmlFor=\"skill2\">Skill 2:</label>  \n        <input  type=\"text\" \n                onChange={e=>setSkill2(e.target.value)} \n                value={skill2}\n                // placeholder={valid}\n                />\n\n        <label htmlFor=\"skill3\">Skill 3:</label>  \n        <input  type=\"text\" \n                onChange={e=>setSkill3(e.target.value)} \n                value={skill3}\n                // placeholder={valid}\n                />\n      </div>\n    </form>\n  )\n}\n\nexport default FormEdit","////// CSS\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n////// Tools\nimport React,{useState,useEffect} from \"react\";\nimport {Router,Link,navigate} from \"@reach/router\"\nimport axios from \"axios\";\n//////Components\nimport Table from \"./Components/Table\"\nimport Details from \"./Components/Details\"\nimport Form from  \"./Components/Form\"\nimport FromEdit from \"./Components/FormEdit\"\n///////////////////////////////////////////////////\nfunction App() {\n  const [list,setList]=useState([]);\n  const fetchPet = () =>{\n    axios.get(`http://localhost:8000/api/pets/`)\n      .then (res=>{\n        res.data.errors?\n        console.log(res.data.errors)\n        :\n        setList(res.data)\n      })\n      .catch (err=>console.log(err))\n  }\n\n  useEffect(()=>{\n    fetchPet()\n  },[])\n\n  return (\n    <>\n      <h1>Pet Shelter</h1>\n      <Router>\n      <Table list={list} path=\"/\" refresh={fetchPet}/>\n      <Details path=\"/pets/:id\" refresh={fetchPet}/>\n      <Form path=\"/pets/new\" refresh={fetchPet}/>\n      <FromEdit path=\"/pets/:id/edit\" refresh={fetchPet}/>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}